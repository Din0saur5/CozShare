"""fix data types 

Revision ID: 5e4fb3dbfb9a
Revises: 7ad2b4ac1eb3
Create Date: 2023-12-31 15:21:37.079617

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '5e4fb3dbfb9a'
down_revision = '7ad2b4ac1eb3'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('comments', schema=None) as batch_op:
        batch_op.drop_index('ix_comments_created')
        batch_op.create_index(batch_op.f('ix_comments_created'), ['created'], unique=False)

    with op.batch_alter_table('posts', schema=None) as batch_op:
        batch_op.drop_index('ix_posts_created')
        batch_op.create_index(batch_op.f('ix_posts_created'), ['created'], unique=False)

    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.alter_column('following',
               existing_type=postgresql.ARRAY(sa.VARCHAR()),
               type_=sa.ARRAY(sa.TEXT()),
               existing_nullable=True)
        batch_op.alter_column('followers',
               existing_type=postgresql.ARRAY(sa.VARCHAR()),
               type_=sa.ARRAY(sa.TEXT()),
               existing_nullable=True)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.alter_column('followers',
               existing_type=sa.ARRAY(sa.TEXT()),
               type_=postgresql.ARRAY(sa.VARCHAR()),
               existing_nullable=True)
        batch_op.alter_column('following',
               existing_type=sa.ARRAY(sa.TEXT()),
               type_=postgresql.ARRAY(sa.VARCHAR()),
               existing_nullable=True)

    with op.batch_alter_table('posts', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_posts_created'))
        batch_op.create_index('ix_posts_created', ['created'], unique=False)

    with op.batch_alter_table('comments', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_comments_created'))
        batch_op.create_index('ix_comments_created', ['created'], unique=False)

    # ### end Alembic commands ###
